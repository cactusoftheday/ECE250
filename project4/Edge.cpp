//
// Created by kijij on 11/27/2023.
//

#include <limits>
#include "Edge.h"
//some of these functions were auto generated by CLion
int Edge::getDestination() const {
    return destination;
}

double Edge::getDistance() const {
    return distance;
}

double Edge::getSpeedLimit() const {
    return speedLimit;
}

void Edge::setAdjustment(double adjustment) {
    Edge::adjustment = adjustment;
    setTraffic(adjustment);
}

double Edge::getTraffic() const {
    return traffic;
}

void Edge::setTraffic(double adjust) {
    if(adjust == 0){
        Edge::traffic = std::numeric_limits<double>::infinity();
    }
    else{
        Edge::traffic = (distance) / (speedLimit * adjust);
    }
}

Edge::Edge(int destination, double distance, double speedLimit, double adjustment){
    Edge::next = nullptr;
    Edge::traffic = (distance) / (speedLimit * adjustment);
    Edge::destination = destination;
    Edge::distance = distance;
    Edge::speedLimit = speedLimit;
    Edge::adjustment = adjustment;
}

Edge::~Edge() {}

void Edge::setDistance(double distance) {
    Edge::distance = distance;
}

void Edge::setSpeedLimit(double speedLimit) {
    Edge::speedLimit = speedLimit;
}



